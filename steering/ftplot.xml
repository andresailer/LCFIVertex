<marlin>
 <execute>
  <processor name="MyAIDAProcessor"/>
  <processor name="MyPlot"/>
  <processor name="MyLCFIAIDAPlot"/>
 </execute>

 <global>
  <parameter name="LCIOInputFiles"> flavourtagout.slcio </parameter>
  <!-- limit the number of processed records (run+evt): -->  
  <!-- parameter name="MaxRecordNumber" value="1000000000" /-->  
  <!-- parameter name="SkipNEvents" value="0" /-->  
  <parameter name="SupressCheck" value="false" />  
  <!--- parameter name="GearXMLFile"> gear_ldc.xml </parameter> -->  
 </global>

 <processor name="MyPlot" type="Plot">
 <!--Plots various outputs from the flavour tag-->
  <!--Name of the collection of ReconstructedParticles that is the jet-->
  <parameter name="JetCollectionName" type="string">FTSelectedJets </parameter>
  <!--Filename for the output-->
  <parameter name="OutputFilename" type="string">PlotProcessorOutput </parameter>
</processor>


 <processor name="MyLCFIAIDAPlot" type="LCFIAIDAPlot">
 <!--Creates an AIDA plot of the efficiency purity values and various other things. Make sure that MarlinAIDAProcessor is run before this.-->
  <!--Cut determining the Neural Net cut used to select B-Jets-->
  <!--parameter name="BTagNNCut" type="double">0.7 </parameter-->
  <!--Cut determining the Neural Net cut used to select C-Jets-->
  <!--parameter name="CTagNNCut" type="double">0.7 </parameter-->
  <!--Cut determining the maximum cos(theta) of the jet.  Default: |cos(theta)|<0.9-->
  <!--parameter name="CosThetaJetMax" type="double">0.9 </parameter-->
  <!--Cut determining the minimum cos(theta) of the jet.  Default: no lower cut.-->
  <!--parameter name="CosThetaJetMin" type="double">0 </parameter-->
  <!--Names of the LCFloatVec Collections that contain the flavour tags (one purity efficiency plot per tag) (in same order as jet collection)-->
  <parameter name="FlavourTagCollections" type="StringVec">FlavourTag  </parameter>
  <!--Name of the collection of ReconstructedParticles that is the jet-->
  <parameter name="JetCollectionName" type="string" lcioInType="ReconstructedParticle">SGVJets </parameter>
  <!--Name of the collection that holds all MC particles. -->
  <parameter name="MCParticleCollection" type="string" lcioInType="MCParticle">MCParticle </parameter>
  <!--Set true to make a tuple of the flavour tag input variables.  Default is true.-->
  <!--parameter name="MakeTuple" type="bool">true </parameter-->
  <!--Output filename for the NN values (output).  Only used if PrintNeuralNetOutput parameter is true.  If left blank, output will be directed to standard out.-->
  <!--parameter name="NeuralNetOutputFile" type="string"> </parameter-->
  <!--Cut determining the maximum PT of the jet.  Default: 10000 GeV/c-->
  <!--parameter name="PTJetMax" type="double">10000 </parameter-->
  <!--Cut determining the minimum PT of the jet.  Default: no lower cut.-->
  <!--parameter name="PTJetMin" type="double">0 </parameter-->
  <!--Set true if you want a print-out of the NN values (output) for the various flavour tags-->
  <!--parameter name="PrintNeuralNetOutput" type="bool">false </parameter-->
  <!--Names of the LCFloatVec Collections that contain the flavour tag inputs (in same order as jet collection)-->
  <parameter name="TagInputsCollections" type="StringVec">FlavourTagInputs  </parameter>
  <!--Name of the LCIntVec collection containing the true flavour of the jets (same order as jets)-->
  <parameter name="TrueJetFlavourCollection" type="string" lcioInType="LCIntVec">TrueJetFlavour </parameter>
  <!--Name of the LCFloatVec collection containing the true hadron charge of the jets (same order as jets)-->
  <parameter name="TrueJetHadronChargeCollection" type="string" lcioInType="LCFloatVec">TrueJetHadronCharge </parameter>
  <!--Name of the LCIntVec collection containing the true PDG code of the jets (same order as jets)-->
  <parameter name="TrueJetPDGCodeCollection" type="string" lcioInType="LCIntVec">TrueJetPDGCode </parameter>
  <!--Name of the LCFloatVec collection containing the true parton charge of the jets (same order as jets)-->
  <parameter name="TrueJetPartonChargeCollection" type="string" lcioInType="LCFloatVec">TrueJetPartonCharge </parameter>
  <!--Name of the collection that holds the Verticies-->
  <parameter name="VertexCollection" type="string" lcioInType="Vertex">ZVRESVertices </parameter>
</processor>



</marlin>
