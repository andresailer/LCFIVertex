The LCFI Vertex Package

releases:

 -----------
| v00-06-03 |
 -----------
  F.Gaede
   - export external boost include directory in LCFIVertexConfig.cmake
   - fixed installation of vertex_lcfi directory when build with external boost
   - allow for using external boost 

 -----------
| v00-06-02 |
 -----------

    * fixed duplicate namespace in forward declaration (F.Gaede)



 -----------
| v00-06-01 |
 -----------

    * fixed cmake scripts for out-of-source installations


 --------
| v00-06 |
 --------

    * made Ptcalc() a public static function so it can be used in analysis code

    * fixed logical comparison bug in twotrackpid.cpp

    * relaxed maximum number of iterations in vertexfuncmaxfinderclassicstepper.cpp

    * added cmake configuration files in order to compile/link against LCFIVertex

    * moved initialization of _dataSet variable in FlavourTag.cc to init() in order
        to fix problem of ProcessRunHeader() being skipped when SkipNEvents parameter
        is set in a steering file

 --------
| v00-05 |
 --------

  * simplified cmake scripts (now uses the new ILCUTIL package )

  * bug fix for building documentation in SL5.5


 ------------
| v00-04-pre |
 ------------

2010-10-04 15:43  tomohiko

   * for gcc-4.4 compatibility: the boost library was updated to v1.44;
	                              other minor patches were added.

 -----------
| v00-03-01 |
 -----------
   * same as v00-03 - made compatible for MacOS
     

 --------
| v00-03 |
 --------

2008-12-16 10:56  walsh

	* src/RPCutProcessor.cc: Remove ReconstuctedParticle V0s from
	  selected Jets.

2008-10-17 00:01  grimes

	* src/RPCutProcessor.cc: Modified the Monte Carlo particle ID cut
	  so that it can use a ReconstructedParticle to MCParticle relation
	  collection as well as the current Track to MCParticle.  Also
	  added a check on the type of objects the relation collection
	  refers to and from.

2008-10-14 14:21  engels

	* CMakeLists.txt, LCFIVertexConfig.cmake.in: added 32 bit
	  compatibility option

2008-08-12 14:44  walsh

	* src/NeuralNetTrainer.cc: bug fix: using D0Significance2 instead
	  of Z0Significance in parts of the code.

2008-07-25 12:21  harderk

	* src/TrueAngularJetFlavourProcessor.cc: prevent true jet flavour
	  confusion due to anomalous PDG codes with more than five digits

2008-07-22 11:38  walsh

	* vertex_lcfi/src/lciointerface.cpp: line 165: cerr -> cout

2008-07-21 23:11  walsh

	* vertex_lcfi/src/lciointerface.cpp: Bug fix: only RPs with a track
	  are used to make a Jet in jetFromLCIORP.

2008-07-17 16:56  jeffery

	* doc/zvtop.pdf, vertex_lcfi/zvtop/include/doc.h: Put zvtop docs in
	  pdf

2008-07-17 02:18  devetak

	* src/TrueAngularJetFlavourProcessor.cc: Bug... repetition is bad
	  but errors are worse...

2008-07-16 11:36  harderk

	* src/ConversionTagger.cc: remove LCCollection::setSubset() call
	  that seems to cause problems with re-reading the V0Veto
	  collection in separate Marlin jobs

2008-07-09 16:24  harderk

	* diagnostics/: include/V0Performance.h, src/V0Performance.cc:
	  improve treatment of SimTrackerHit count

2008-07-08 18:09  harderk

	* src/ConversionTagger.cc: adjust default values and histogram
	  ranges according to cut tuning results so far

2008-07-08 16:51  harderk

	* include/ConversionTagger.h, src/ConversionTagger.cc: replace
	  entire vertex reconstruction by new MarlinUtil HelixClass code

2008-07-08 13:29  harderk

	* src/ConversionTagger.cc: improved (3d) calculation of helix
	  distances


 --------------
| v00-02-06-dev |
 --------------

2008-07-07 15:57  harderk

    * src/ConversionTagger.cc: clean up hardcoded numbers such as
      particle masses

2008-07-07 15:56  harderk

    * diagnostics/src/V0Performance.cc: fix bug that would cause
      segmentation fault when dealing with corrupted input collections

2008-07-07 15:04  lastovic

    * vertex_lcfi/src/TState.cpp: Magnetic field taken from Gear.

2008-07-05 10:52  gaede


 --------------
| v00-02-05-dev |
 --------------
  2008-07-04 18:31  walsh

	* src/DSTCollectionProcessor.cc: - Put try-catch blocks in the
	  correct order; - Define pNames.size() and mcNames.size() as
	  integers in the initialisation loops of fv and mcv; -
	  FTSelectedJets -> Jets as the default for _JetCollectionName

2008-07-03 17:07  martin

	* src/RPCutProcessor.cc: Comment out warning line: " MCParticles
	  related to this track! No cuts performed on MC PDG code. which
	  appears too much to act as any warning!

2008-07-03 15:32  martin

	* src/LCFIAIDAPlotProcessor.cc: Bug fix in purity printout for BC
	  tag.	Thanks to Sonja for spotting this!

2008-06-30 13:37  harderk

	* src/ConversionTagger.cc: exploit momentum asymmetry between
	  Lambda decay proton and pion

2008-06-27 18:00  harderk

	* diagnostics/src/V0Performance.cc: another Lambda plot

2008-06-27 11:54  harderk

	* diagnostics/src/V0Performance.cc: add histogram with momentum
	  distributions of Lambda decay products

 --------------
| v00-02-04-dev |
 --------------


2008-06-25 18:20  lynch

	* include/DSTAIDAPlotProcessor.h, include/DSTCollectionProcessor.h,
	  src/DSTAIDAPlotProcessor.cc, src/DSTCollectionProcessor.cc,
	  src/DSTPlotProcessor.cc, steering/ftfordst.xml: changed DST
	  Processors so that PID info is added to the existing collection
	  added DSTAIDAPlotProcessor

2008-06-24 17:06  harderk

	* include/ConversionTagger.h, src/ConversionTagger.cc: add
	  capability to enable or disable tagging of conv,K0,Lambda0
	  separately

2008-06-19 16:04  harderk

	* include/ConversionTagger.h, src/ConversionTagger.cc: reject
	  candidates coming from vicinity of the IP

2008-06-17 16:05  harderk

	* src/ConversionTagger.cc: bug fix: existing conv/V0 candidates
	  (e.g. found by PandoraPFA prior to running ConversionTagger) were
	  not added to the LCCollection containing all conv/V0 candidates.

2008-06-13 13:59  harderk

	* diagnostics/: include/V0Performance.h, src/V0Performance.cc:
	  count and print total number of conv/V0 candidates separately for
	  conv, K0, Lambda. this improves diagnostics to tune
	  ConversionTagger cuts separately for the different candidate
	  classes

2008-06-13 11:15  harderk

	* diagnostics/: include/V0Performance.h, src/V0Performance.cc: add
	  capability to look for conversions only in selected
	  LCCollections. remove some debug output

2008-06-13 11:13  harderk

	* src/ConversionTagger.cc: reduce verbosity a bit


 --------------
| v00-02-03-dev |
 --------------

  2nd release for full-chain tests for ILD mass reconstruction.
  Changes to the way the flavour tag collections are written out for DST

  - TrueAngularJetProcessor + NeuralNetTrainer + PlotProcessor + AIDAPlotProcessor:
    changed so that the MC Truth info is stored in one LCFloatVec, in the order
    TrueJetFlavour, TruePDGCode, TrueHadronCharge, TruePartonCharge
    (Erik Devetak, Victoria Martin)
    
  - 2 new processors created in order to add FT and MC Truth info to the jets 
    using ParticleID objects
    This will reduce the number of collections for the mass reconstruction DSTs:

    DSTCollectionProcessor : adds 2 ParticleID algorithms to each jet:
	 		     "LCFIFlavourTag": contains the flavour tagging info, 
                             "MCTruth": contains the Monte Carlo truth info


    DSTPlotProcessor : a rewrite of PlotProcessor, which uses the DST collections 
                       from the ParticleID objects instead of the full collections.
		       also contains a function that will compare the parameters from both
		       collection types and print out a message if they are different.
    (Clare Lynch)





 --------------
| v00-02-03-pre|
 --------------
 
   release for full-chain tests for ILD mass reconstruction, fixing a number of small issues   
   found since last release and adding further functionality:
 
   - steering files updated to include steering file running FullLDCTracking, PandoraPFA
     (instead of cheattracks+jetfind);
     based on current version of steering file for mass reconstruction from ILD mailing list
     (Clare Lynch)
 
   - LCFIAIDAPlotProcessor: now compatible with RAIDA;    (Victoria Martin)
     corrected: "ptmasscorrection" --> "ptcorrectedmass"  (Roberval Walsh)
 
   - RPCutProcessor: small bug fix: this processor should not require GEAR unless hadronic
     interaction removal is selected  (Kristian Harder)
 
   - ZVRES: small bug fix in LCFIVertex/vertex_lcfi/zvtop/src/vertexfinderclassic.cpp
     to ensure consistency with ZVTOP paper  (Ben Jeffery)
 
   - ZVKIN: return IP if no vertices found;
     sort found vertices wrt decay length from IP, in ascending order (Ben Jeffery)
 
   - flavour tag inputs: code added to obtain new parameters for calculation of joint probability 
     from fit; currently only available if the package is run with JAIDA (Erik Devetak)

   - neural network code: 
      minor fixes: ensured code compiles with gcc 4.2.1; (Kristian Harder, Dave Bailey)
      missing "const" added;
      at request of CALICE added class to determine the importance of the input variables
      for a given data set and trained network based on the approach used in the TMVA package,
      see http://tmva.sourceforge.net/docu/TMVAUsersGuide.pdf p66 (Dave Bailey)

   - NOTE: with this version, a new dependence on MarlinUtil is introduced;
     this became necessary for the ConversionTagger processor, currently
     under development - don't use this processor yet!  (Kristian Harder)
 

(Sonja Hillert, S.Hillert1@physics.ox.ac.uk)
 
-------------------------------------------------------------

 ----------
| v00-02-02|
 ----------

   - LCFIVertex/vertex_lcfi/algo/src/pereventipfitter.cpp changed to use Kalman filter for
     vertex fitting (reduces run time for PerEventIPFitter.cc by about a factor 100) 
     (Kalman filter developed by S. Gorbunov, I. Kisel, 
     Vertex Package interface: Tomas Lastovicka)

   - RPCutProcessor: for suppression of hadronic interactions using MC information this 
     processor is now updated to support arbitrary detector geometries (Kristian Harder)

   - LCFIAIDAPlotProcessor: new processor providing diagnostics for flavour tag
     (Victoria Martin)
     Please note -BUILD_WITH="AIDAJNI" must be specified to cmake to build LCFIAIDAPlotProcessor
   - LCFIVertex/macro/FlavourTagInputsOverlay.py: python script to create plots from 
     output of LCFIAIDAPlotProcessor (Victoria Martin)
   - LCFIVertex/macro/MakePurityVsEfficiencyRootPlot.C: root macro to plot purity vs
     efficiency graphs that can be written out by PlotProcessor, if compiling with root 
     option; permits results from different runs (e.g. with different settings) to be 
     compared (Kristian Harder) 

   - vertex charge calculation: correction of algorithm to agree with the procedure developed
     with fast MC (Erik Devetak)
   - separate VertexChargeProcessor, storing results in separate LCFloatVec collections;
     this used to be done in FlavourTagInputsProcessor
     (Erik Devetak)

For further details on these changes, please see the documentation.

(Sonja Hillert, S.Hillert1@physics.ox.ac.uk)

-------------------------------------------------------------

 ----------
| v00-01-01|
 ----------
   - same code as v00-01
     the first official release except that
     cmake build is supported 


Installation: (using cmake - new build tool for Marlin v00-09-08)
-------------------------------------------------------------

 1st: edit the file BuildSetup.cmake according to your
      system setup.

 2nd: type the following commands:

    $ tar zxvf boost.tgz  # -- if not yet done --
    $ mkdir build
    $ cd build
    $ cmake -C ../BuildSetup.cmake ..
    $ make install

    The documentation gets automatically built when you type
    "make install". If you don't want this, set the variable
    INSTALL_DOC to OFF in your BuildSetup.cmake
    Afterwards you can still build it with:
 
    $ make doc       -> all documentation (HTML+PDF)
    $ make doc_html  -> for the HTML documentation
    $ make doc_latex -> for the PDF documentation (refman.pdf)

 For more information on CMake for the ILCSoftware check:
 http://ilcsoft.desy.de/portal/general_documentation/index_eng.html

 CMake's official website:
 http://www.cmake.org

(Jan Engels, jan.engels@desy.de)
-------------------------------------------------------------

Installation:
If you already have MarlinReco installed and working then installing
this package should only require placing the directory containing this
file in $MARLIN/packages eg. $MARLIN/packages/LCFIVertex

Documentation
To build the documentation, which includes examples of how to run the
processors in the package you will need doxygen 
(http://www.doxygen.org/) and pdflatex for the pdf
documentation. They are usually included with most linux distributions.
Run the following commands from the LCFIVertex directory:

For the HTML documentation:
cd doc
doxygen
firefox html/index.html
(or other browser)

For the PDF documentation (a subset of the HTML which does not include
all classes in the package):
cd doc
doxygen Doxyfile.latex
cd latex
make
(a file refman.pdf is produced)


Ben Jeffery b.jeffery1@physics.ox.ac.uk



